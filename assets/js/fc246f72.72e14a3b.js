"use strict";(self.webpackChunkoracle_docs=self.webpackChunkoracle_docs||[]).push([[160],{3951:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"oracle-apex-global-ctw","title":"Set and View Global Contexts in APEX and Oracle DB","description":"Initial Draft, I have an issue where on the very first Page Subimt of run report, the parameter value from APEX page item isn\'t accessable, I suspect this is due to needing before to set context using Page header on the very first load of the page; Will add debug and behavior later, test in your app.","source":"@site/docs-oracle/oracle-apex-global-ctx.md","sourceDirName":".","slug":"/oracle-apex-global-ctw","permalink":"/Oracle-Docs/docs-oracle/oracle-apex-global-ctw","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"oracle-apex-global-ctw","title":"Set and View Global Contexts in APEX and Oracle DB","sidebar_position":2},"sidebar":"oracleSidebar","previous":{"title":"Oralce APEX Global CTX Process Diagram","permalink":"/Oracle-Docs/docs-oracle/oracle-apex-global-ctw-plantuml"}}');var t=s(4848),a=s(8453);const r={id:"oracle-apex-global-ctw",title:"Set and View Global Contexts in APEX and Oracle DB",sidebar_position:2},l="Parameterized Views in Oracle 19c and APEX 23.1 Using Global Application Context",c={},o=[{value:"1) Goal",id:"1-goal",level:2},{value:"2) Why It Works",id:"2-why-it-works",level:2},{value:"3) Prereqs and Order of Creation",id:"3-prereqs-and-order-of-creation",level:2},{value:"4) Create Context and Trusted Package",id:"4-create-context-and-trusted-package",level:2},{value:"4.1 Context",id:"41-context",level:3},{value:"4.2 Trusted Package",id:"42-trusted-package",level:3},{value:"5) APEX Integration (Init and Cleanup)",id:"5-apex-integration-init-and-cleanup",level:2},{value:"6) Minimal Verification (DB, APEX Page, Ajax)",id:"6-minimal-verification-db-apex-page-ajax",level:2},{value:"6.1 DB block",id:"61-db-block",level:3},{value:"6.2 Parameterized view + APEX page item",id:"62-parameterized-view--apex-page-item",level:3},{value:"6.3 Ajax check",id:"63-ajax-check",level:3},{value:"6.4 Execution Flow",id:"64-execution-flow",level:3},{value:"7) Performance and Simplification Note",id:"7-performance-and-simplification-note",level:2},{value:"8) Troubleshooting",id:"8-troubleshooting",level:2},{value:"9) References",id:"9-references",level:2}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("detail",{children:"Initial Draft, I have an issue where on the very first Page Subimt of run report, the parameter value from APEX page item isn't accessable, I suspect this is due to needing before to set context using Page header on the very first load of the page; Will add debug and behavior later, test in your app. "}),"\n",(0,t.jsx)(n.header,{children:(0,t.jsxs)(n.h1,{id:"parameterized-views-in-oracle-19c-and-apex-231-using-global-application-context",children:["Parameterized Views in Oracle 19c and APEX 23.1 Using ",(0,t.jsx)(n.strong,{children:"Global Application Context"})]})}),"\n",(0,t.jsx)(n.h2,{id:"1-goal",children:"1) Goal"}),"\n",(0,t.jsxs)(n.p,{children:["Create a page/user-specific filters to apply across pooled DB sessions and Ajax requests. Use a ",(0,t.jsx)(n.strong,{children:"global application context"})," keyed by a canonical ",(0,t.jsx)(n.code,{children:"client_id"}),". Query with ",(0,t.jsx)(n.code,{children:"SYS_CONTEXT"})," in views or SQL, and set/clear context at each APEX request.\n",(0,t.jsx)(n.strong,{children:"Note:"})," ",(0,t.jsx)(n.em,{children:"Before Header"})," and ",(0,t.jsx)(n.em,{children:"After Regions"})," processes ",(0,t.jsx)(n.strong,{children:"does not work"})," for pages' ",(0,t.jsx)(n.strong,{children:"Ajax"})," (no filter/sort/partial refresh) requests. For Ajax or mixed flows, use ",(0,t.jsx)(n.strong,{children:"Security Attributes \u2192 Database Session"}),".\nAPEX docs specify per-request Initialization/Cleanup hooks; Before Header runs during page render only."]}),"\n",(0,t.jsx)(n.h2,{id:"2-why-it-works",children:"2) Why It Works"}),"\n",(0,t.jsxs)(n.p,{children:["A global context stores attributes in the SGA and exposes them to a session based on ",(0,t.jsx)(n.code,{children:"CLIENT_IDENTIFIER"}),". ",(0,t.jsx)(n.code,{children:"SYS_CONTEXT"})," reads the attribute value; ",(0,t.jsx)(n.code,{children:"DBMS_SESSION.SET_CONTEXT"})," writes it; ",(0,t.jsx)(n.code,{children:"DBMS_SESSION.CLEAR_CONTEXT"})," removes it. APEX can run Initialization and Cleanup PL/SQL each request, so the same context applies to full submits and Ajax calls."]}),"\n",(0,t.jsx)(n.h2,{id:"3-prereqs-and-order-of-creation",children:"3) Prereqs and Order of Creation"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create the context ",(0,t.jsx)(n.strong,{children:"first"})," and bind it to the trusted package."]}),"\n",(0,t.jsxs)(n.li,{children:["Create the package that calls ",(0,t.jsx)(n.code,{children:"DBMS_SESSION.SET_CONTEXT"})," and ",(0,t.jsx)(n.code,{children:"CLEAR_CONTEXT"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"(optional) Grant execute on the package to the APEX parsing schema."}),"\n",(0,t.jsxs)(n.li,{children:["Use a single ",(0,t.jsx)(n.code,{children:"client_id"})," pattern: ",(0,t.jsx)(n.code,{children:":APP_USER || :APP_NAME"}),".",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/23/sqlrf/CREATE-CONTEXT.html",children:"Docs"})," note: only the package named in ",(0,t.jsx)(n.code,{children:"CREATE CONTEXT ... USING"})," can set attributes."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"4-create-context-and-trusted-package",children:"4) Create Context and Trusted Package"}),"\n",(0,t.jsx)(n.h3,{id:"41-context",children:"4.1 Context"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE OR REPLACE CONTEXT TEST_APP_CTX\n\tUSING test_app_ctx_helper_pkg\n\tACCESSED GLOBALLY;\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ACCESSED GLOBALLY"})," enables global scope; the bound package controls writes."]}),"\n",(0,t.jsx)(n.h3,{id:"42-trusted-package",children:"4.2 Trusted Package"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plsql",children:"CREATE OR REPLACE PACKAGE APPS.test_app_ctx_helper_pkg AUTHID DEFINER AS\n\tPROCEDURE set_parameter_value(p_client_id IN VARCHAR2, p_attr IN VARCHAR2, p_val IN VARCHAR2);\n\tPROCEDURE clear_ctx(p_client_id IN VARCHAR2);\nEND test_app_ctx_helper_pkg;\n/\n\nCREATE OR REPLACE PACKAGE BODY APPS.test_app_ctx_helper_pkg AS\n\tPROCEDURE set_parameter_value(p_client_id IN VARCHAR2, p_attr IN VARCHAR2, p_val IN VARCHAR2) IS\n\tBEGIN\n\t\tDBMS_SESSION.set_context(namespace => 'TEST_APP_CTX', attribute  => UPPER(p_attr), value =>  p_val,  username => null, client_id => p_client_id);\n\tEND;\n\tPROCEDURE clear_ctx(p_client_id IN VARCHAR2) IS\n\tBEGIN\n\t\tDBMS_SESSION.clear_context(namespace => 'TEST_APP_CTX', client_id => p_client_id, attribute => null);\n\tEND;\nEND test_app_ctx_helper_pkg;\n/ \n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"SET_IDENTIFIER"})," ties visibility in ",(0,t.jsx)(n.code,{children:"GLOBAL_CONTEXT"})," to the ",(0,t.jsx)(n.code,{children:"client_id"}),". Also uses ",(0,t.jsx)(n.code,{children:"client_id"})," named parameter in ",(0,t.jsx)(n.code,{children:"CLEAR_CONTEXT"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"5-apex-integration-init-and-cleanup",children:"5) APEX Integration (Init and Cleanup)"}),"\n",(0,t.jsxs)(n.p,{children:["Put this once per application: ",(0,t.jsx)(n.strong,{children:"Shared Components \u2192 Security Attributes \u2192 Database Session"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Initialization PL/SQL Code"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plsql",children:"-- Update XXX to actual page_id \nDECLARE  \n  client_id VARCHAR2(64) := :APP_USER || ':AppName:XXX';\nBEGIN\n    IF :APP_PAGE_ID = XXX and :PXXX_SalaryIn IS NOT NULL THEN \n      test_app_ctx_helper_pkg.set_parameter_value(client_id,'P_SalaryIn',:PXXX_SalaryIn);\n  END IF;  \nEXCEPTION\n    WHEN OTHERS THEN\n        apex_application.g_notification := '*** APEX ERROR > Database Session|Initialization PL/SQL Code: '||SQLERRM; \nEND;\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cleanup PL/SQL Code"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plsql",children:"-- Update XXX to actual page_id \nDECLARE\n  client_id VARCHAR2(64) := :APP_USER || ':AppName:XXX';\nBEGIN      \n    test_app_ctx_helper_pkg.clear_ctx('client_id123');\n    -- When no attribute is defined, all ctx for that client_id is cleared \nEXCEPTION \n    WHEN OTHERS THEN \n        apex_application.g_notification := '*** APEX ERROR > Database Session|Cleanup PL/SQL Code: '||SQLERRM;\nEND;\n"})}),"\n",(0,t.jsx)(n.p,{children:"These attributes run at the start and end of every APEX request, including Ajax."}),"\n",(0,t.jsx)(n.h2,{id:"6-minimal-verification-db-apex-page-ajax",children:"6) Minimal Verification (DB, APEX Page, Ajax)"}),"\n",(0,t.jsx)(n.h3,{id:"61-db-block",children:"6.1 DB block"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plsql",children:"-- No other set up needed, use to test context and pkg. \n    BEGIN\n        DBMS_OUTPUT.PUT_LINE('=== BEGIN ==='); \n\n        test_app_ctx_helper_pkg.set_parameter_value('client_id123','ATTRIBUTEIN','valueIN');\n        DBMS_OUTPUT.PUT_LINE( SYS_CONTEXT('TEST_APP_CTX','ATTRIBUTEIN') );  \n        \n        FOR r IN (SELECT namespace, attribute, value FROM GLOBAL_CONTEXT) LOOP\n          DBMS_OUTPUT.PUT_LINE(r.namespace||':'||r.attribute||'='||r.value);\n        END LOOP;\n        test_app_ctx_helper_pkg.clear_ctx('client_id123');\n\n        DBMS_OUTPUT.PUT_LINE('==== END ====');\n    END; \n\n    -- Expected DBMS Out\n    -- === BEGIN ===\n    -- valueIN\n    -- TEST_APP_CTX:ATTRIBUTEIN=valueIN\n    -- ==== END ====\n"})}),"\n",(0,t.jsx)(n.h3,{id:"62-parameterized-view--apex-page-item",children:"6.2 Parameterized view + APEX page item"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- \nCREATE OR REPLACE VIEW Custom_HR_CTX_V AS\nSELECT e.*\nFROM   hr.employees e\nWHERE  e.salary = TO_NUMBER(SYS_CONTEXT('TEST_APP_CTX','P_SALARY_IN')); \n"})}),"\n",(0,t.jsxs)(n.p,{children:["Use the view in a Classic/IR region: ",(0,t.jsx)(n.code,{children:"SELECT * FROM Custom_HR_CTX_V"}),". On report run or page submit should provide/save ",(0,t.jsx)(n.code,{children:"P10_SALARY_IN"}),"'s value in DB sessison."]}),"\n",(0,t.jsx)(n.h3,{id:"63-ajax-check",children:"6.3 Ajax check"}),"\n",(0,t.jsx)(n.p,{children:"Filter or Sort the Classic/IR region. The Initialization PL/SQL runs each Ajax request, so the same context value is read by the view."}),"\n",(0,t.jsx)(n.h3,{id:"64-execution-flow",children:"6.4 Execution Flow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Page Submit"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"APEX collects submitted items and request context."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Init PL/SQL Code"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Application logic runs at page submit or process level."}),"\n",(0,t.jsx)(n.li,{children:"Example: setting identifiers for correlation."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Set Context Values"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DBMS_SESSION.SET_IDENTIFIER"})," \u2192 assign ",(0,t.jsx)(n.code,{children:"client_id"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DBMS_SESSION.SET_CONTEXT"})," \u2192 assign ",(0,t.jsx)(n.code,{children:"P10_Salary_In"})," = ",(0,t.jsx)(n.code,{children:"clientValue"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SQL Execution"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"APEX executes queries."}),"\n",(0,t.jsxs)(n.li,{children:["Context-sensitive logic applied with ",(0,t.jsx)(n.code,{children:"SYS_CONTEXT"})," lookups."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Filter from Global Context"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Query predicates reference values in ",(0,t.jsx)(n.strong,{children:"application/global context"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Enforced in VPD, RLS, or explicit WHERE clauses."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return Data to APEX"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Results mapped back to APEX page items or regions."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clean Up PL/SQL Code"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Optional ",(0,t.jsx)(n.code,{children:"DBMS_SESSION.CLEAR_CONTEXT"})," or reset of identifiers."]}),"\n",(0,t.jsx)(n.li,{children:"Ensures no leakage across pooled sessions."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"7-performance-and-simplification-note",children:"7) Performance and Simplification Note"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"SYS_CONTEXT"})," is a SQL function and can be used in ",(0,t.jsx)(n.code,{children:"WHERE"})," clauses and views. Apply normal indexing on filtered columns. Evaluate plan as usual with ",(0,t.jsx)(n.code,{children:"EXPLAIN PLAN"})," or AWR tools. No Oracle claim of special behavior beyond standard predicate evaluation."]}),"\n",(0,t.jsx)(n.h2,{id:"8-troubleshooting",children:"8) Troubleshooting"}),"\n",(0,t.jsxs)(n.ol,{start:"0",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"SELECT * FROM V$GLOBALCONTEXT;"})," to view all Global Context in DB, can also inspect ",(0,t.jsx)(n.code,{children:"CLIENT_IDENTIFIER"})," via ",(0,t.jsx)(n.code,{children:"V$SESSION"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ORA-01031"})," while setting context: ensure calls run ",(0,t.jsx)(n.strong,{children:"inside"})," the package named in ",(0,t.jsx)(n.code,{children:"CREATE CONTEXT ... USING"}),". Create context first, then package. (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/23/sqlrf/CREATE-CONTEXT.html",children:"CREATE_CONTEXT Doc"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["Not visible in ",(0,t.jsx)(n.code,{children:"V$GLOBALCONTEXT"})]}),": set ",(0,t.jsx)(n.code,{children:"CLIENT_IDENTIFIER"})," (either in your setter or earlier in the request). (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/19/refrn/GLOBAL_CONTEXT.html",children:"GLOBAL_CONTEXT Doc"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ajax didn\u2019t pick up value"}),": put logic in ",(0,t.jsx)(n.strong,{children:"Security Attributes \u2192 Database Session \u2192 Initialization PL/SQL Code"}),", not in a page \u201cBefore Header\u201d process. Before Header is only ran on Page Submit."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Case sensitivity"}),": ",(0,t.jsx)(n.code,{children:"client_id"})," and attribute names are case-sensitive where documented; use ",(0,t.jsx)(n.code,{children:"UPPER"})," for attributes consistently."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["Changing ",(0,t.jsx)(n.code,{children:"CLIENT_IDENTIFIER"})," in APEX."]}),"  ",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/apex/24.1/htmdb/correlating-apex-sessions-to-database-sessions.html#GUID-3758CB03-6837-470E-A099-23387D9DC386",children:"APEX Docs"}),", section D.2, client_info, paragraph 2:\n",(0,t.jsx)(n.code,{children:"Within an APEX session, setting this attribute is not necessary and generally should be left unchanged. If custom PL/SQL code executed within an APEX session changes client_id, this change will not cause problems for Oracle APEX. However, it may affect the ability for some monitoring tools to effectively identify the APEX session."})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"9-references",children:"9) References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Global Application Context visibility"}),": ",(0,t.jsx)(n.em,{children:"Database Reference 19c \u2192 GLOBAL_CONTEXT"}),". (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/19/refrn/GLOBAL_CONTEXT.html",children:"Oracle Documentation"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Using Application Contexts"}),": ",(0,t.jsx)(n.em,{children:"Security Guide 19c \u2192 Using Application Contexts"}),". (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/19/dbseg/using-application-contexts-to-retrieve-user-information.html",children:"Oracle Documentation"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"DBMS_SESSION"}),": ",(0,t.jsx)(n.em,{children:"PL/SQL Packages and Types 19c \u2192 DBMS_SESSION"})," (",(0,t.jsx)(n.code,{children:"SET_CONTEXT"}),", ",(0,t.jsx)(n.code,{children:"SET_IDENTIFIER"}),", ",(0,t.jsx)(n.code,{children:"CLEAR_CONTEXT"}),"). (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/DBMS_SESSION.html",children:"Oracle Documentation"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"CREATE CONTEXT"}),": ",(0,t.jsx)(n.em,{children:"SQL Language Reference"})," (context binding to package; global access). (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/23/sqlrf/CREATE-CONTEXT.html",children:"Oracle Documentation"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SYS_CONTEXT"}),": ",(0,t.jsx)(n.em,{children:"SQL Language Reference"})," (function usage in SQL/PLSQL). (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/oracle-database/23/sqlrf/SYS_CONTEXT.html",children:"Oracle Documentation"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"APEX request hooks"}),": ",(0,t.jsx)(n.em,{children:"APEX 23.1 Dev Guide \u2192 Configuring Security Attributes \u2192 Database Session"}),". (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/apex/23.1/htmdb/configuring-security-attributes.html",children:"Oracle Documentation"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"APEX session correlation"}),": ",(0,t.jsx)(n.em,{children:"APEX 24.1 Dev Guide \u2192 Correlating APEX Sessions to Database Sessions"}),". (",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/en/database/oracle/apex/24.1/htmdb/correlating-apex-sessions-to-database-sessions.html",children:"Oracle Documentation"}),")"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(6540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);